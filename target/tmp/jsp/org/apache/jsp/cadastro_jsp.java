/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.44.v20210927
 * Generated at: 2025-07-10 01:43:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class cadastro_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("file:/home/th3_w6rst/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar", Long.valueOf(1752077032249L));
    _jspx_dependants.put("jar:file:/home/th3_w6rst/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153395882000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"pt-BR\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <title>Cadastrar Livro - Biblioteca Cesumar</title>\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n");
      out.write("    <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css\" rel=\"stylesheet\">\n");
      out.write("    <style>\n");
      out.write("        body {\n");
      out.write("            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n");
      out.write("            min-height: 100vh;\n");
      out.write("            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .navbar {\n");
      out.write("            background: rgba(255, 255, 255, 0.1);\n");
      out.write("            backdrop-filter: blur(10px);\n");
      out.write("            border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .navbar-brand {\n");
      out.write("            font-weight: bold;\n");
      out.write("            color: white !important;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .navbar-nav .nav-link {\n");
      out.write("            color: white !important;\n");
      out.write("            margin: 0 10px;\n");
      out.write("            transition: color 0.3s ease;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .navbar-nav .nav-link:hover {\n");
      out.write("            color: #ffd700 !important;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .main-content {\n");
      out.write("            padding: 120px 0 60px 0;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .form-container {\n");
      out.write("            background: rgba(255, 255, 255, 0.1);\n");
      out.write("            backdrop-filter: blur(10px);\n");
      out.write("            border: 1px solid rgba(255, 255, 255, 0.2);\n");
      out.write("            border-radius: 20px;\n");
      out.write("            padding: 40px;\n");
      out.write("            color: white;\n");
      out.write("            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .form-container h2 {\n");
      out.write("            text-align: center;\n");
      out.write("            margin-bottom: 30px;\n");
      out.write("            font-weight: bold;\n");
      out.write("            color: #ffd700;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .form-group {\n");
      out.write("            margin-bottom: 25px;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .form-label {\n");
      out.write("            font-weight: 600;\n");
      out.write("            margin-bottom: 8px;\n");
      out.write("            color: white;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .form-control {\n");
      out.write("            background: rgba(255, 255, 255, 0.1);\n");
      out.write("            border: 1px solid rgba(255, 255, 255, 0.3);\n");
      out.write("            color: white;\n");
      out.write("            padding: 12px 15px;\n");
      out.write("            border-radius: 10px;\n");
      out.write("            transition: all 0.3s ease;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .form-control:focus {\n");
      out.write("            background: rgba(255, 255, 255, 0.2);\n");
      out.write("            border-color: #ffd700;\n");
      out.write("            box-shadow: 0 0 0 0.2rem rgba(255, 215, 0, 0.25);\n");
      out.write("            color: white;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .form-control::placeholder {\n");
      out.write("            color: rgba(255, 255, 255, 0.6);\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .btn-primary {\n");
      out.write("            background: linear-gradient(45deg, #ffd700, #ff6b6b);\n");
      out.write("            border: none;\n");
      out.write("            padding: 12px 30px;\n");
      out.write("            font-size: 1.1rem;\n");
      out.write("            font-weight: bold;\n");
      out.write("            border-radius: 25px;\n");
      out.write("            transition: all 0.3s ease;\n");
      out.write("            text-transform: uppercase;\n");
      out.write("            letter-spacing: 1px;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .btn-primary:hover {\n");
      out.write("            transform: translateY(-2px);\n");
      out.write("            box-shadow: 0 8px 25px rgba(255, 215, 0, 0.4);\n");
      out.write("            background: linear-gradient(45deg, #ff6b6b, #ffd700);\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .btn-secondary {\n");
      out.write("            background: rgba(255, 255, 255, 0.2);\n");
      out.write("            border: 1px solid rgba(255, 255, 255, 0.3);\n");
      out.write("            color: white;\n");
      out.write("            padding: 12px 30px;\n");
      out.write("            font-size: 1.1rem;\n");
      out.write("            font-weight: bold;\n");
      out.write("            border-radius: 25px;\n");
      out.write("            transition: all 0.3s ease;\n");
      out.write("            text-transform: uppercase;\n");
      out.write("            letter-spacing: 1px;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .btn-secondary:hover {\n");
      out.write("            background: rgba(255, 255, 255, 0.3);\n");
      out.write("            transform: translateY(-2px);\n");
      out.write("            color: white;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .alert {\n");
      out.write("            border-radius: 10px;\n");
      out.write("            margin-bottom: 25px;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .alert-danger {\n");
      out.write("            background: rgba(220, 53, 69, 0.2);\n");
      out.write("            border: 1px solid rgba(220, 53, 69, 0.3);\n");
      out.write("            color: #ff6b6b;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .alert-success {\n");
      out.write("            background: rgba(25, 135, 84, 0.2);\n");
      out.write("            border: 1px solid rgba(25, 135, 84, 0.3);\n");
      out.write("            color: #4caf50;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .form-text {\n");
      out.write("            color: rgba(255, 255, 255, 0.7);\n");
      out.write("            font-size: 0.9rem;\n");
      out.write("            margin-top: 5px;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .required {\n");
      out.write("            color: #ff6b6b;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .form-control.is-invalid {\n");
      out.write("            border-color: #ff6b6b;\n");
      out.write("            box-shadow: 0 0 0 0.2rem rgba(255, 107, 107, 0.25);\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .form-control.is-valid {\n");
      out.write("            border-color: #4caf50;\n");
      out.write("            box-shadow: 0 0 0 0.2rem rgba(76, 175, 80, 0.25);\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .invalid-feedback {\n");
      out.write("            color: #ff6b6b;\n");
      out.write("            font-size: 0.875rem;\n");
      out.write("            margin-top: 5px;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .valid-feedback {\n");
      out.write("            color: #4caf50;\n");
      out.write("            font-size: 0.875rem;\n");
      out.write("            margin-top: 5px;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .button-group {\n");
      out.write("            display: flex;\n");
      out.write("            gap: 15px;\n");
      out.write("            justify-content: center;\n");
      out.write("            margin-top: 30px;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .fade-in {\n");
      out.write("            animation: fadeIn 0.8s ease-in;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        @keyframes fadeIn {\n");
      out.write("            from { opacity: 0; transform: translateY(20px); }\n");
      out.write("            to { opacity: 1; transform: translateY(0); }\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .loading {\n");
      out.write("            display: none;\n");
      out.write("            text-align: center;\n");
      out.write("            margin-top: 20px;\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        .spinner-border {\n");
      out.write("            color: #ffd700;\n");
      out.write("        }\n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <!-- Navigation -->\n");
      out.write("    <nav class=\"navbar navbar-expand-lg navbar-dark fixed-top\">\n");
      out.write("        <div class=\"container\">\n");
      out.write("            <a class=\"navbar-brand\" href=\"index.jsp\">\n");
      out.write("                <i class=\"fas fa-book-open me-2\"></i>\n");
      out.write("                Biblioteca Cesumar\n");
      out.write("            </a>\n");
      out.write("            <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\">\n");
      out.write("                <span class=\"navbar-toggler-icon\"></span>\n");
      out.write("            </button>\n");
      out.write("            <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n");
      out.write("                <ul class=\"navbar-nav ms-auto\">\n");
      out.write("                    <li class=\"nav-item\">\n");
      out.write("                        <a class=\"nav-link\" href=\"index.jsp\">Início</a>\n");
      out.write("                    </li>\n");
      out.write("                    <li class=\"nav-item\">\n");
      out.write("                        <a class=\"nav-link active\" href=\"cadastro.jsp\">Cadastrar</a>\n");
      out.write("                    </li>\n");
      out.write("                    <li class=\"nav-item\">\n");
      out.write("                        <a class=\"nav-link\" href=\"livros?action=listar\">Consultar</a>\n");
      out.write("                    </li>\n");
      out.write("                </ul>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </nav>\n");
      out.write("\n");
      out.write("    <!-- Main Content -->\n");
      out.write("    <div class=\"main-content\">\n");
      out.write("        <div class=\"container\">\n");
      out.write("            <div class=\"row justify-content-center\">\n");
      out.write("                <div class=\"col-md-8 col-lg-6\">\n");
      out.write("                    <div class=\"form-container fade-in\">\n");
      out.write("                        <h2>\n");
      out.write("                            <i class=\"fas fa-plus-circle me-2\"></i>\n");
      out.write("                            Cadastrar Novo Livro\n");
      out.write("                        </h2>\n");
      out.write("                        \n");
      out.write("                        <!-- Mensagens de erro -->\n");
      out.write("                        ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("                        \n");
      out.write("                        ");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\n");
      out.write("                        \n");
      out.write("                        ");
      if (_jspx_meth_c_005fif_005f2(_jspx_page_context))
        return;
      out.write("\n");
      out.write("                        \n");
      out.write("                        <form id=\"cadastroForm\" action=\"livros\" method=\"post\" novalidate>\n");
      out.write("                            <input type=\"hidden\" name=\"action\" value=\"cadastrar\">\n");
      out.write("                            \n");
      out.write("                            <!-- Título -->\n");
      out.write("                            <div class=\"form-group\">\n");
      out.write("                                <label for=\"titulo\" class=\"form-label\">\n");
      out.write("                                    Título <span class=\"required\">*</span>\n");
      out.write("                                </label>\n");
      out.write("                                <input type=\"text\" \n");
      out.write("                                       class=\"form-control\" \n");
      out.write("                                       id=\"titulo\" \n");
      out.write("                                       name=\"titulo\" \n");
      out.write("                                       placeholder=\"Digite o título do livro\"\n");
      out.write("                                       value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${titulo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\n");
      out.write("                                       required\n");
      out.write("                                       maxlength=\"200\">\n");
      out.write("                                <div class=\"form-text\">Máximo 200 caracteres</div>\n");
      out.write("                                <div class=\"invalid-feedback\"></div>\n");
      out.write("                                <div class=\"valid-feedback\">Título válido!</div>\n");
      out.write("                            </div>\n");
      out.write("                            \n");
      out.write("                            <!-- Autor -->\n");
      out.write("                            <div class=\"form-group\">\n");
      out.write("                                <label for=\"autor\" class=\"form-label\">\n");
      out.write("                                    Autor <span class=\"required\">*</span>\n");
      out.write("                                </label>\n");
      out.write("                                <input type=\"text\" \n");
      out.write("                                       class=\"form-control\" \n");
      out.write("                                       id=\"autor\" \n");
      out.write("                                       name=\"autor\" \n");
      out.write("                                       placeholder=\"Digite o nome do autor\"\n");
      out.write("                                       value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${autor}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\n");
      out.write("                                       required\n");
      out.write("                                       maxlength=\"100\">\n");
      out.write("                                <div class=\"form-text\">Máximo 100 caracteres</div>\n");
      out.write("                                <div class=\"invalid-feedback\"></div>\n");
      out.write("                                <div class=\"valid-feedback\">Autor válido!</div>\n");
      out.write("                            </div>\n");
      out.write("                            \n");
      out.write("                            <!-- Ano de Publicação -->\n");
      out.write("                            <div class=\"form-group\">\n");
      out.write("                                <label for=\"ano\" class=\"form-label\">\n");
      out.write("                                    Ano de Publicação <span class=\"required\">*</span>\n");
      out.write("                                </label>\n");
      out.write("                                <input type=\"number\" \n");
      out.write("                                       class=\"form-control\" \n");
      out.write("                                       id=\"ano\" \n");
      out.write("                                       name=\"ano\" \n");
      out.write("                                       placeholder=\"Digite o ano de publicação\"\n");
      out.write("                                       value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ano}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\n");
      out.write("                                       required\n");
      out.write("                                       min=\"1000\"\n");
      out.write("                                       max=\"2100\">\n");
      out.write("                                <div class=\"form-text\">Entre 1000 e 2100</div>\n");
      out.write("                                <div class=\"invalid-feedback\"></div>\n");
      out.write("                                <div class=\"valid-feedback\">Ano válido!</div>\n");
      out.write("                            </div>\n");
      out.write("                            \n");
      out.write("                            <!-- ISBN -->\n");
      out.write("                            <div class=\"form-group\">\n");
      out.write("                                <label for=\"isbn\" class=\"form-label\">\n");
      out.write("                                    ISBN <span class=\"required\">*</span>\n");
      out.write("                                </label>\n");
      out.write("                                <input type=\"text\" \n");
      out.write("                                       class=\"form-control\" \n");
      out.write("                                       id=\"isbn\" \n");
      out.write("                                       name=\"isbn\" \n");
      out.write("                                       placeholder=\"Digite o ISBN (ex: 978-3-16-148410-0)\"\n");
      out.write("                                       value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${isbn}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\n");
      out.write("                                       required\n");
      out.write("                                       maxlength=\"17\">\n");
      out.write("                                <div class=\"form-text\">ISBN-10 ou ISBN-13 (com ou sem hífens)</div>\n");
      out.write("                                <div class=\"invalid-feedback\"></div>\n");
      out.write("                                <div class=\"valid-feedback\">ISBN válido!</div>\n");
      out.write("                            </div>\n");
      out.write("                            \n");
      out.write("                            <!-- Botões -->\n");
      out.write("                            <div class=\"button-group\">\n");
      out.write("                                <button type=\"submit\" class=\"btn btn-primary\">\n");
      out.write("                                    <i class=\"fas fa-save me-2\"></i>\n");
      out.write("                                    Cadastrar\n");
      out.write("                                </button>\n");
      out.write("                                <button type=\"button\" class=\"btn btn-secondary\" onclick=\"limparFormulario()\">\n");
      out.write("                                    <i class=\"fas fa-eraser me-2\"></i>\n");
      out.write("                                    Limpar\n");
      out.write("                                </button>\n");
      out.write("                                <a href=\"index.jsp\" class=\"btn btn-secondary\">\n");
      out.write("                                    <i class=\"fas fa-arrow-left me-2\"></i>\n");
      out.write("                                    Voltar\n");
      out.write("                                </a>\n");
      out.write("                            </div>\n");
      out.write("                            \n");
      out.write("                            <div class=\"loading\">\n");
      out.write("                                <div class=\"spinner-border\" role=\"status\">\n");
      out.write("                                    <span class=\"visually-hidden\">Carregando...</span>\n");
      out.write("                                </div>\n");
      out.write("                                <p class=\"mt-2\">Processando...</p>\n");
      out.write("                            </div>\n");
      out.write("                        </form>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\n");
      out.write("    <script>\n");
      out.write("        // Validação do formulário\n");
      out.write("        const BibliotecaForm = {\n");
      out.write("            validarTitulo: function(titulo) {\n");
      out.write("                if (!titulo || titulo.trim().length === 0) {\n");
      out.write("                    return 'Título é obrigatório';\n");
      out.write("                }\n");
      out.write("                if (titulo.length > 200) {\n");
      out.write("                    return 'Título não pode ter mais de 200 caracteres';\n");
      out.write("                }\n");
      out.write("                return null;\n");
      out.write("            },\n");
      out.write("            \n");
      out.write("            validarAutor: function(autor) {\n");
      out.write("                if (!autor || autor.trim().length === 0) {\n");
      out.write("                    return 'Autor é obrigatório';\n");
      out.write("                }\n");
      out.write("                if (autor.length > 100) {\n");
      out.write("                    return 'Autor não pode ter mais de 100 caracteres';\n");
      out.write("                }\n");
      out.write("                return null;\n");
      out.write("            },\n");
      out.write("            \n");
      out.write("            validarAno: function(ano) {\n");
      out.write("                if (!ano || ano.trim().length === 0) {\n");
      out.write("                    return 'Ano é obrigatório';\n");
      out.write("                }\n");
      out.write("                const anoNum = parseInt(ano);\n");
      out.write("                if (isNaN(anoNum) || anoNum < 1000 || anoNum > 2100) {\n");
      out.write("                    return 'Ano deve ser um número entre 1000 e 2100';\n");
      out.write("                }\n");
      out.write("                return null;\n");
      out.write("            },\n");
      out.write("            \n");
      out.write("            validarISBN: function(isbn) {\n");
      out.write("                if (!isbn || isbn.trim().length === 0) {\n");
      out.write("                    return 'ISBN é obrigatório';\n");
      out.write("                }\n");
      out.write("                \n");
      out.write("                // Remove hífens e espaços\n");
      out.write("                const isbnLimpo = isbn.replace(/[-\\s]/g, '');\n");
      out.write("                \n");
      out.write("                if (isbnLimpo.length !== 10 && isbnLimpo.length !== 13) {\n");
      out.write("                    return 'ISBN deve ter 10 ou 13 dígitos';\n");
      out.write("                }\n");
      out.write("                \n");
      out.write("                // Verifica se contém apenas números e X (para ISBN-10)\n");
      out.write("                if (!/^[0-9X]+$/i.test(isbnLimpo)) {\n");
      out.write("                    return 'ISBN deve conter apenas números e, opcionalmente, X no final';\n");
      out.write("                }\n");
      out.write("                \n");
      out.write("                return null;\n");
      out.write("            },\n");
      out.write("            \n");
      out.write("            validarCampo: function(campo) {\n");
      out.write("                const input = document.getElementById(campo);\n");
      out.write("                const valor = input.value;\n");
      out.write("                let erro = null;\n");
      out.write("                \n");
      out.write("                switch(campo) {\n");
      out.write("                    case 'titulo':\n");
      out.write("                        erro = this.validarTitulo(valor);\n");
      out.write("                        break;\n");
      out.write("                    case 'autor':\n");
      out.write("                        erro = this.validarAutor(valor);\n");
      out.write("                        break;\n");
      out.write("                    case 'ano':\n");
      out.write("                        erro = this.validarAno(valor);\n");
      out.write("                        break;\n");
      out.write("                    case 'isbn':\n");
      out.write("                        erro = this.validarISBN(valor);\n");
      out.write("                        break;\n");
      out.write("                }\n");
      out.write("                \n");
      out.write("                const feedback = input.parentElement.querySelector('.invalid-feedback');\n");
      out.write("                \n");
      out.write("                if (erro) {\n");
      out.write("                    input.classList.add('is-invalid');\n");
      out.write("                    input.classList.remove('is-valid');\n");
      out.write("                    feedback.textContent = erro;\n");
      out.write("                } else {\n");
      out.write("                    input.classList.remove('is-invalid');\n");
      out.write("                    input.classList.add('is-valid');\n");
      out.write("                }\n");
      out.write("                \n");
      out.write("                return erro === null;\n");
      out.write("            },\n");
      out.write("            \n");
      out.write("            formatarISBN: function(isbn) {\n");
      out.write("                const isbnLimpo = isbn.replace(/[-\\s]/g, '');\n");
      out.write("                \n");
      out.write("                if (isbnLimpo.length === 10) {\n");
      out.write("                    return isbnLimpo.substring(0, 1) + '-' +\n");
      out.write("                           isbnLimpo.substring(1, 4) + '-' +\n");
      out.write("                           isbnLimpo.substring(4, 9) + '-' +\n");
      out.write("                           isbnLimpo.substring(9, 10);\n");
      out.write("                } else if (isbnLimpo.length === 13) {\n");
      out.write("                    return isbnLimpo.substring(0, 3) + '-' +\n");
      out.write("                           isbnLimpo.substring(3, 4) + '-' +\n");
      out.write("                           isbnLimpo.substring(4, 7) + '-' +\n");
      out.write("                           isbnLimpo.substring(7, 12) + '-' +\n");
      out.write("                           isbnLimpo.substring(12, 13);\n");
      out.write("                }\n");
      out.write("                \n");
      out.write("                return isbn;\n");
      out.write("            }\n");
      out.write("        };\n");
      out.write("        \n");
      out.write("        // Event listeners\n");
      out.write("        document.addEventListener('DOMContentLoaded', function() {\n");
      out.write("            const form = document.getElementById('cadastroForm');\n");
      out.write("            const campos = ['titulo', 'autor', 'ano', 'isbn'];\n");
      out.write("            \n");
      out.write("            // Validação em tempo real\n");
      out.write("            campos.forEach(campo => {\n");
      out.write("                const input = document.getElementById(campo);\n");
      out.write("                input.addEventListener('blur', () => BibliotecaForm.validarCampo(campo));\n");
      out.write("                input.addEventListener('input', () => {\n");
      out.write("                    // Remove classes de validação durante a digitação\n");
      out.write("                    input.classList.remove('is-invalid', 'is-valid');\n");
      out.write("                });\n");
      out.write("            });\n");
      out.write("            \n");
      out.write("            // Formatação automática do ISBN\n");
      out.write("            document.getElementById('isbn').addEventListener('blur', function() {\n");
      out.write("                if (this.value && BibliotecaForm.validarCampo('isbn')) {\n");
      out.write("                    this.value = BibliotecaForm.formatarISBN(this.value);\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("            \n");
      out.write("            // Validação no submit\n");
      out.write("            form.addEventListener('submit', function(e) {\n");
      out.write("                e.preventDefault();\n");
      out.write("                \n");
      out.write("                let formValido = true;\n");
      out.write("                campos.forEach(campo => {\n");
      out.write("                    if (!BibliotecaForm.validarCampo(campo)) {\n");
      out.write("                        formValido = false;\n");
      out.write("                    }\n");
      out.write("                });\n");
      out.write("                \n");
      out.write("                if (formValido) {\n");
      out.write("                    // Mostra loading\n");
      out.write("                    document.querySelector('.loading').style.display = 'block';\n");
      out.write("                    \n");
      out.write("                    // Desabilita o botão de submit\n");
      out.write("                    const submitBtn = form.querySelector('button[type=\"submit\"]');\n");
      out.write("                    submitBtn.disabled = true;\n");
      out.write("                    \n");
      out.write("                    // Submete o formulário\n");
      out.write("                    form.submit();\n");
      out.write("                } else {\n");
      out.write("                    // Foca no primeiro campo com erro\n");
      out.write("                    const primeiroErro = form.querySelector('.is-invalid');\n");
      out.write("                    if (primeiroErro) {\n");
      out.write("                        primeiroErro.focus();\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("        });\n");
      out.write("        \n");
      out.write("        // Função para limpar o formulário\n");
      out.write("        function limparFormulario() {\n");
      out.write("            const form = document.getElementById('cadastroForm');\n");
      out.write("            form.reset();\n");
      out.write("            \n");
      out.write("            // Remove classes de validação\n");
      out.write("            const inputs = form.querySelectorAll('.form-control');\n");
      out.write("            inputs.forEach(input => {\n");
      out.write("                input.classList.remove('is-invalid', 'is-valid');\n");
      out.write("            });\n");
      out.write("            \n");
      out.write("            // Foca no primeiro campo\n");
      out.write("            document.getElementById('titulo').focus();\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        // Auto-focus no primeiro campo\n");
      out.write("        document.getElementById('titulo').focus();\n");
      out.write("    </script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /cadastro.jsp(242,24) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty erro}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("                            <div class=\"alert alert-danger\" role=\"alert\">\n");
          out.write("                                <i class=\"fas fa-exclamation-triangle me-2\"></i>\n");
          out.write("                                ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${erro}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\n");
          out.write("                            </div>\n");
          out.write("                        ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /cadastro.jsp(249,24) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty erros}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("                            <div class=\"alert alert-danger\" role=\"alert\">\n");
          out.write("                                <i class=\"fas fa-exclamation-triangle me-2\"></i>\n");
          out.write("                                <strong>Foram encontrados os seguintes erros:</strong>\n");
          out.write("                                <ul class=\"mt-2 mb-0\">\n");
          out.write("                                    ");
          if (_jspx_meth_c_005fforEach_005f0(_jspx_th_c_005fif_005f1, _jspx_page_context))
            return true;
          out.write("\n");
          out.write("                                </ul>\n");
          out.write("                            </div>\n");
          out.write("                        ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f1);
      // /cadastro.jsp(254,36) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("erro");
      // /cadastro.jsp(254,36) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/cadastro.jsp(254,36) '${erros}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${erros}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\n");
            out.write("                                        <li>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${erro}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</li>\n");
            out.write("                                    ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f2_reused = false;
    try {
      _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f2.setParent(null);
      // /cadastro.jsp(261,24) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty sucesso}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
      if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("                            <div class=\"alert alert-success\" role=\"alert\">\n");
          out.write("                                <i class=\"fas fa-check-circle me-2\"></i>\n");
          out.write("                                ");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sucesso}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\n");
          out.write("                            </div>\n");
          out.write("                        ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
      _jspx_th_c_005fif_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
    }
    return false;
  }
}
